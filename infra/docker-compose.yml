services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ../db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - ../.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://app:${POSTGRES_PASSWORD:-change-me}@db:5432/app}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-http://localhost:3000}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_BUCKET: ${S3_BUCKET:-fiber-photos}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-change-me}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: ["/bin/bash", "-lc", "uvicorn app.main:app --host 0.0.0.0 --port 8000"]
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-change-me}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"
  mongo:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  auth:
    build:
      context: ..
      dockerfile: server/Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongo:27017/app
      - JWT_SECRET=${JWT_SECRET:-change-me}
      - CORS_ALLOW_ORIGINS=${CORS_ALLOW_ORIGINS:-http://localhost:3000}
      - FASTAPI_URL=http://api:8000
    ports:
      - "5000:5000"
    depends_on:
      mongo:
        condition: service_healthy
    command: ["node", "server/index.js"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  client:
    image: node:20-alpine
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - REACT_APP_API_BASE_URL=http://auth:5000/api
    volumes:
      - ../client:/app
    command: ["sh", "-lc", "(npm ci || npm install) && npm start"]
    ports:
      - "3000:3000"
    depends_on:
      auth:
        condition: service_healthy
      api:
        condition: service_started
volumes:
  db-data:
  redis-data:
  minio-data:
  mongo-data:
